{"version":3,"sources":["img/smotto1.png","img/smotto2.png","img/smotto3.png","img/smotto4.png","img/smotto5.png","img/smotto6.png","img/smotto7.png","img/smotto8.png","img/smotto9.png","img/smotto10.png","img/smotto11.png","img/smotto12.png","img/smotto13.png","img/smotto14.png","img/smotto15.png","Timeline.jsx","img/smotto.js","Smotto.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Timeline","pointerStyle","marginLeft","concat","this","props","percentage","age","Date","getFullYear","date","Math","floor","react_default","a","createElement","className","style","Component","smottoArray","smotto1","smotto2","smotto3","smotto4","smotto5","smotto6","smotto7","smotto8","smotto9","smotto10","smotto11","smotto12","smotto13","smotto14","smotto15","Smotto","current","ceil","images","length","map","img","index","key","classNames","active","imageClasses","src","alt","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","changePercentage","bind","assertThisInitialized","window","addEventListener","throttle","removeEventListener","event","setState","getScrollPercentage","height","getDocumentHeight","innerHeight","scrollPosition","scrollY","getPercentage","value","total","body","document","html","documentElement","max","scrollHeight","offsetHeight","clientHeight","huePercentage","primaryHue","secondaryHue","color1","color2","_this$calculateColors","calculateColors","appStyle","backgroundImage","src_Smotto_0","src_Timeline_0","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2256269a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/smotto1.d4b04df4.png\";","module.exports = __webpack_public_path__ + \"static/media/smotto2.377c4f9d.png\";","module.exports = __webpack_public_path__ + \"static/media/smotto3.193c7cbe.png\";","module.exports = __webpack_public_path__ + \"static/media/smotto4.3227f1a1.png\";","module.exports = __webpack_public_path__ + \"static/media/smotto5.89c6d0e3.png\";","module.exports = __webpack_public_path__ + \"static/media/smotto6.dcf4b9c7.png\";","module.exports = __webpack_public_path__ + \"static/media/smotto7.c5d5f2e0.png\";","module.exports = __webpack_public_path__ + \"static/media/smotto8.13ed24a6.png\";","module.exports = __webpack_public_path__ + \"static/media/smotto9.9689b77c.png\";","module.exports = __webpack_public_path__ + \"static/media/smotto10.f18d72c5.png\";","module.exports = __webpack_public_path__ + \"static/media/smotto11.7abd52ba.png\";","module.exports = __webpack_public_path__ + \"static/media/smotto12.898f9801.png\";","module.exports = __webpack_public_path__ + \"static/media/smotto13.2498ea31.png\";","module.exports = __webpack_public_path__ + \"static/media/smotto14.0aa04e16.png\";","module.exports = __webpack_public_path__ + \"static/media/smotto15.e033042f.png\";","import React, { Component } from 'react';\nimport './Timeline.css';\n\nclass Timeline extends Component {\n  render() {\n    const pointerStyle = {\n      marginLeft: `${this.props.percentage}%`\n    };\n    const birthYear = 1995;\n    const age = new Date().getFullYear() - birthYear;\n    const date = birthYear + Math.floor((age * this.props.percentage) / 100);\n    return (\n      <div className=\"Timeline\">\n        <div className=\"Timeline-axe\" />\n        <div className=\"Timeline-pointer\" style={pointerStyle}>\n          <div className=\"Timeline-date\" style={pointerStyle}>\n            {date}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Timeline;\n","import smotto1 from './smotto1.png';\r\nimport smotto2 from './smotto2.png';\r\nimport smotto3 from './smotto3.png';\r\nimport smotto4 from './smotto4.png';\r\nimport smotto5 from './smotto5.png';\r\nimport smotto6 from './smotto6.png';\r\nimport smotto7 from './smotto7.png';\r\nimport smotto8 from './smotto8.png';\r\nimport smotto9 from './smotto9.png';\r\nimport smotto10 from './smotto10.png';\r\nimport smotto11 from './smotto11.png';\r\nimport smotto12 from './smotto12.png';\r\nimport smotto13 from './smotto13.png';\r\nimport smotto14 from './smotto14.png';\r\nimport smotto15 from './smotto15.png';\r\n\r\nconst smottoArray = [\r\n  smotto1,\r\n  smotto2,\r\n  smotto3,\r\n  smotto4,\r\n  smotto5,\r\n  smotto6,\r\n  smotto7,\r\n  smotto8,\r\n  smotto9,\r\n  smotto10,\r\n  smotto11,\r\n  smotto12,\r\n  smotto13,\r\n  smotto14,\r\n  smotto15\r\n];\r\n\r\nexport default smottoArray;\r\n","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport './Smotto.css';\r\nimport images from './img/smotto';\r\n\r\nclass Smotto extends Component {\r\n  render() {\r\n    let current = Math.ceil((images.length * this.props.percentage) / 100);\r\n    current = current === images.length ? current - 1 : current;\r\n    const imageClasses = index =>\r\n      classNames('Smotto-img', { active: current === index });\r\n    return (\r\n      <div className=\"Smotto\">\r\n        {images.map((img, index) => (\r\n          <img\r\n            key={index}\r\n            className={imageClasses(index)}\r\n            src={img}\r\n            alt=\"Smotto\"\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Smotto;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport throttle from 'lodash.throttle';\nimport Timeline from './Timeline';\nimport Smotto from './Smotto';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      percentage: 0\n    };\n    this.changePercentage = this.changePercentage.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', throttle(this.changePercentage, 100));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.changePercentage);\n  }\n\n  changePercentage(event) {\n    this.setState({\n      percentage: this.getScrollPercentage()\n    });\n  }\n\n  getScrollPercentage() {\n    let height = this.getDocumentHeight() - window.innerHeight;\n    let scrollPosition = window.scrollY;\n    return this.getPercentage(scrollPosition, height);\n  }\n\n  getPercentage(value, total) {\n    return Math.ceil((value / total) * 100);\n  }\n\n  getDocumentHeight() {\n    let body = document.body;\n    let html = document.documentElement;\n    return Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight\n    );\n  }\n\n  calculateColors(huePercentage) {\n    let primaryHue = Math.floor((250 * huePercentage) / 100) + 50;\n    let secondaryHue = Math.floor((360 * huePercentage) / 100) + 100;\n    return {\n      color1: `hsl(${primaryHue}, 80%, 50%)`,\n      color2: `hsl(${secondaryHue}, 50%, 60%)`\n    };\n  }\n\n  render() {\n    let { color1, color2 } = this.calculateColors(this.state.percentage);\n    let appStyle = {\n      backgroundImage: 'linear-gradient(60deg, ' + color1 + ', ' + color2 + ')'\n    };\n    return (\n      <div className=\"App\" style={appStyle}>\n        <div className=\"App-container\">\n          <div className=\"App-header\">\n            <h1>Smotto Growth Interactive Diagram</h1>\n            <p>Scroll to preview</p>\n          </div>\n          <Smotto percentage={this.state.percentage} />\n          <Timeline percentage={this.state.percentage} />\n        </div>\n        <div className=\"App-height\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}